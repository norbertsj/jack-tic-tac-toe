class Game {
    field Board board;
    field int player;
    field boolean running;
    field boolean draw;

    constructor Game new() {
        let board = Board.new();
        let running = false;
        let draw = false;
        let player = 2; // 0: none; 1: X; 2: O
        return this;
    }

    method void dispose() {
        do board.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        var int input;
        let running = true;

        while (running) {
            do switchPlayer();
            let input = readInput();
            do board.fillPosition(player, input);
            do board.draw();
            let running = doWeKeepRunning();            
        }

        if (draw) {
            do Output.printString("Draw!");
        } else {
            if (player = 1) {
                do Output.printString("Player X wins!");
            } else {
                do Output.printString("Player O wins!");
            }
        }
        
        return;
    }

    method int readInput() {
        var String readMessage;
        var int input;
        var boolean invalidInput;
        let input = 0;
        let invalidInput = true;

        if (player = 1) {
            let readMessage = "Move for X:";
        } else {
            let readMessage = "Move for O:";
        }

        while (invalidInput) {
            do resetCursor();
            let input = Keyboard.readInt(readMessage);

            if ((input > 0) & (input < 10) & (board.isValidPosition(input))) {
                let invalidInput = false;
            }
        }

        return input;
    }

    method void resetCursor() {
        do Output.moveCursor(20, 0);
        return;
    }

    method void switchPlayer() {
        if (player = 1) {
            let player = 2;
        } else {
            let player = 1;
        }

        return;
    }

    method boolean doWeKeepRunning() {
        if ((board.isHorizontalMatch()) | (board.isVerticalMatch()) | (board.isDiagonalMatch())) {
            return false;
        }

        if (board.allPositionsFilled()) {
            let draw = true;
            return false;
        }

        return true;
    }
}